{
  "openapi": "3.0.3",
  "info": {
    "title": "Formlabs Web API",
    "version": "0.8.1",
    "x-logo": {
      "url": "https://formlabs-dashboard-api-resources.s3.amazonaws.com/Formlabs-Logo-rgb-black.svg",
      "altText": "Formlabs Logo"
    },
    "description": "\n# Introduction\n\nThe Formlabs Web API provides access to Formlabs’ remote control and remote monitoring features for Internet-connected Formlabs products registered to your Dashboard account.\n\nSome example use cases of the Dashboard Developer API:\n1.  Create automated custom reports on Printer usage, material usage, and job history to gain more insights into print production\n2.  More efficiently manage Printers by integrating Printer status data into existing systems (ERP/MES/custom)\n# Terms and Conditions\n-   Formlabs reserves the right to revoke or invalidate your API key at any time without warning.\n-   As a beta, conditions of access to the API may change in the future, access may be bundled into other future software products, etc.\n(we will make an effort to provide as much warning as possible)\n-   As a beta, the API may change at any time without warning in such a way that it may fail to support existing workflows\n(though we will make an effort to provide advanced notice where possible)\n-   You agree not to exceed the Dashboard Developer API rate limit as detailed in the \"Rate Limit\" section below.\n-   You will be given access to certain non-public information, software, and specifications that are confidential and proprietary to Formlabs.\nYou will not share these outside your organization.\n-   By participating in this Beta you may be sharing information with Formlabs. Any information shared is governed by our Privacy Policy\n[https://formlabs.com/support/privacy-policy/](https://formlabs.com/support/privacy-policy/)\n-   The Dashboard Developer API works with Formlabs Printers that are connected to the internet and registered to Dashboard.\nPrinters registered to Dashboard share data with Formlabs (detailed in the Data Collection section of the Privacy Policy:\n[https://formlabs.com/support/privacy-policy/#Data-Collection](https://formlabs.com/support/privacy-policy/#Data-Collection)).\nFor more information about how to set up Printers and register them to Dashboard, see this link:\n[https://support.formlabs.com/s/article/Dashboard-Overview-and-Setup](https://support.formlabs.com/s/article/Dashboard-Overview-and-Setup)\n\n# Technical Overview\nThe Formlabs Dashboard Developer API is a REST HTTP API using JSON as the response data format. \n\nFormlabs Dashboard Developer API is HTTP-based. Send a HTTP GET request to an endpoint to retrieve data from that endpoint.\nThe integrating system should be able to make HTTP requests and process responses in JSON format. \n\nFormlabs Dashboard Developer API uses the standard [OAuth Authentication Flow](https://tools.ietf.org/html/rfc6749#section-4.4),\nand all API endpoints require authentication.\nThe access token created is valid for a day, so make sure to refresh the token regularly to maintain seamless integration with the Dashboard Developer API and ensure uninterrupted workflow.\n\n## Versioning\n\nThe Dashboard Developer API uses resource-based versioning, meaning API endpoints are versioned independently, rather than globally across all endpoints.\n\nFormlabs may change the version of an endpoint to first keep in sync with product updates (could be an addition or a removal of data), in addition to any changes based on customer feedback to allow easier integrations.\n\nVersioning can occur in the following situations:\n\n-   The format of the response data is required to change\n-   The format of the response type is required to change\n\nAny outstanding version changes or upgrades occurred on endpoints will be highlighted and documented.\n\n## Rate Limit\n\nThe rate of requests to the Dashboard Developer API is limited to prevent the abuse of the system.\nRequests from the same IP address are limited to **100 requests/second**.\nRequests from the same authenticated user are limited to **1500 requests/hour**.\nAfter a rate limit is exceeded, requests will return a HTTP status code of 429\nwith a “Retry-after” header outlining when the next request can be made.\n\n## Account Setup & Printer Registration\n\nThe Dashboard Developer API is only available to Formlabs.com account-holding users that are registered and have active Formlabs 3D Printer(s) associated with their accounts. If you do not have a Formlabs.com account, or you have an account but don’t have your Printers connected to it, please follow the instructions below:\n\n1.  Sign up for a Formlabs.com account at [https://formlabs.com/dashboard/#register](https://formlabs.com/dashboard/#register)\n2.  Register the Formlabs 3D Printers at [https://formlabs.com/dashboard/#setup](https://formlabs.com/dashboard/#setup). This involves connecting a Formlabs 3D Printer to the Internet and then visiting the Dashboard Registration screen on the Printer to get a registration code. Type this registration code on the Dashboard Printer registration page to complete the registration.\n3.  Now the Dashboard should show your Printer’s live status, show a history of prints, etc.\n4.  Visit the [Developer Tools page at](https://dashboard.formlabs.com/#developer), and create your **Application credentials**\n6.  Once you have your **Client ID** and the **Client Secret**, go to the [Authentication](#tag/Authentication) section for instructions on how to get an API access token and start using the Dashboard Developer API.\n",
    "termsOfService": "https://formlabs-dashboard-api-resources.s3.amazonaws.com/formlabs-api-license-agreement.html",
    "contact": {
      "name": "Formlabs Support",
      "url": "https://support.formlabs.com/"
    }
  },
  "paths": {
    "/developer/v1/cartridges/": {
      "get": {
        "operationId": "cartridges_list",
        "description": " List of all resin cartridges associated with my account",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "per_page",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "Cartridges"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedCartridgeList"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/developer/v1/events/": {
      "get": {
        "operationId": "events_list",
        "description": "List of all events associated with my account",
        "parameters": [
          {
            "in": "query",
            "name": "cartridge",
            "schema": {
              "type": "string"
            },
            "description": "Filter by resin cartridge serial"
          },
          {
            "in": "query",
            "name": "date__gt",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "Filter by date greater than date specified (ISO 8601 Format)"
          },
          {
            "in": "query",
            "name": "date__lt",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "Filter by date less than date specified (ISO 8601 Format)"
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "per_page",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "print_run",
            "schema": {
              "type": "string"
            },
            "description": "Filter by print id"
          },
          {
            "in": "query",
            "name": "printer",
            "schema": {
              "type": "string"
            },
            "description": "Filter by printer serial"
          },
          {
            "in": "query",
            "name": "tank",
            "schema": {
              "type": "string"
            },
            "description": "Filter by resin tank serial"
          },
          {
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string"
            },
            "description": "Filter by Event Type"
          }
        ],
        "tags": [
          "Events"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedUserEventReadOnlyList"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/developer/v1/groups/": {
      "get": {
        "operationId": "groups_list",
        "description": "List of all groups for my account.",
        "tags": [
          "Printer Groups"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedWorkgroupList"
                }
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "groups_create",
        "description": "Create a group for my account, and make me an administrator.",
        "tags": [
          "Printer Groups"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PartialWorkGroupRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PartialWorkGroupRequest"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PartialWorkGroupRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewWorkgroup"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/developer/v1/groups/bulk-add-printers/": {
      "post": {
        "operationId": "groups_bulk_add_printers_create",
        "description": "Move Printer(s) to a Printer Group.\n**Notes:** Request sender needs to be admin of target group and all of the Printers’ groups.",
        "tags": [
          "Printer Groups"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeveloperAPIGroupsBulkAddPrintersRequest"
              },
              "examples": {
                "PayloadExample": {
                  "value": {
                    "target_group": "61e94a6e-8012-42fa-8fa7-642d2587bef0",
                    "printers": [
                      "SweetMatcha",
                      "CornyCaffeine"
                    ]
                  },
                  "summary": "payload example"
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/DeveloperAPIGroupsBulkAddPrintersRequest"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/DeveloperAPIGroupsBulkAddPrintersRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          }
        }
      }
    },
    "/developer/v1/printers/": {
      "get": {
        "operationId": "printers_list",
        "description": "List of all Printers associated with my account",
        "tags": [
          "Printers"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedDeveloperAPIMyPrinterList"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/developer/v1/prints/": {
      "get": {
        "operationId": "prints_list",
        "description": "List of all prints associated with my account",
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "Filter by date time (ISO 8601 Format) "
          },
          {
            "in": "query",
            "name": "date__gt",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "Filter by date time greater than date time specified (ISO 8601 Format)"
          },
          {
            "in": "query",
            "name": "date__lt",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "Filter by date time less than date time specified (ISO 8601 Format)"
          },
          {
            "in": "query",
            "name": "machine_type_id",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "Filter by machine type id.",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "material",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "description": "Filter by name of the print (Substring Match)"
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "per_page",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "printer",
            "schema": {
              "type": "string"
            },
            "description": "Filter by printer serial"
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string"
            },
            "description": "Filter by status of the print. Possible values are:\n          * `QUEUED` - Queued\n          * `PREPRINT` - Preprint\n          * `PRINTING` - Printing\n          * `PAUSING` - Pausing\n          * `PAUSED` - Paused\n          * `FINISHED` - Finished\n          * `ABORTING` - Aborting\n          * `ABORTED` - Aborted\n          * `ERROR` - Error\n          * `WAITING_FOR_RESOLUTION` - Waiting for Resolution\n          * `PREHEAT` - Preheat\n          * `PRECOAT` - Precoat\n          * `POSTCOAT` - Postcoat"
          }
        ],
        "tags": [
          "Prints"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedPrintRunWithFleetControlDataList"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/developer/v1/tanks/": {
      "get": {
        "operationId": "tanks_list",
        "description": "List of all resin tanks associated with my account",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "per_page",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "Tanks"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedTankList"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/developer/v1/printers/{printer_serial}/prints/": {
      "get": {
        "operationId": "printers_prints_list",
        "description": "List of all prints associated with my account",
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "Filter by date time (ISO 8601 Format) "
          },
          {
            "in": "query",
            "name": "date__gt",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "Filter by date time greater than date time specified (ISO 8601 Format)"
          },
          {
            "in": "query",
            "name": "date__lt",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "Filter by date time less than date time specified (ISO 8601 Format)"
          },
          {
            "in": "query",
            "name": "machine_type_id",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "Filter by machine type id.",
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "material",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "description": "Filter by name of the print (Substring Match)"
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "per_page",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "printer",
            "schema": {
              "type": "string"
            },
            "description": "Filter by printer serial"
          },
          {
            "in": "path",
            "name": "printer_serial",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string"
            },
            "description": "Filter by status of the print. Possible values are:\n          * `QUEUED` - Queued\n          * `PREPRINT` - Preprint\n          * `PRINTING` - Printing\n          * `PAUSING` - Pausing\n          * `PAUSED` - Paused\n          * `FINISHED` - Finished\n          * `ABORTING` - Aborting\n          * `ABORTED` - Aborted\n          * `ERROR` - Error\n          * `WAITING_FOR_RESOLUTION` - Waiting for Resolution\n          * `PREHEAT` - Preheat\n          * `PRECOAT` - Precoat\n          * `POSTCOAT` - Postcoat"
          }
        ],
        "tags": [
          "Prints"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedPrintRunWithFleetControlDataList"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/developer/v1/printers/{printer_serial}/": {
      "get": {
        "operationId": "printers_retrieve",
        "description": "Specific Printer associated with my account",
        "parameters": [
          {
            "in": "path",
            "name": "printer_serial",
            "schema": {
              "type": "string"
            },
            "description": "A unique value identifying this printer.",
            "required": true
          }
        ],
        "tags": [
          "Printers"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeveloperAPIMyPrinter"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/developer/v1/groups/{group_id}/": {
      "patch": {
        "operationId": "groups_partial_update",
        "description": "Update a group administered by my account.",
        "parameters": [
          {
            "in": "path",
            "name": "group_id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "A UUID string identifying this workgroup.",
            "required": true
          }
        ],
        "tags": [
          "Printer Groups"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedPartialWorkGroupRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedPartialWorkGroupRequest"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedPartialWorkGroupRequest"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Workgroup"
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "groups_destroy",
        "description": "Delete a group administered by my account.",
        "parameters": [
          {
            "in": "path",
            "name": "group_id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "A UUID string identifying this workgroup.",
            "required": true
          }
        ],
        "tags": [
          "Printer Groups"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          }
        }
      }
    },
    "/developer/v1/groups/{group_id}/members/": {
      "post": {
        "operationId": "groups_members_create",
        "description": "Invite a user into my group.",
        "parameters": [
          {
            "in": "path",
            "name": "group_id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "A UUID string identifying this Printer Group",
            "required": true
          }
        ],
        "tags": [
          "Printer Groups"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeveloperAPIGroupMembershipCreateRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/DeveloperAPIGroupMembershipCreateRequest"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/DeveloperAPIGroupMembershipCreateRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkgroupMembership"
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "groups_members_update",
        "description": "Update a membership in an administered group.\n  **Warning: You cannot revoke the administrator right of yourself if there are no other administrators!**",
        "parameters": [
          {
            "in": "path",
            "name": "group_id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "A UUID string identifying this Printer Group",
            "required": true
          }
        ],
        "tags": [
          "Printer Groups"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeveloperAPIGroupMembershipUpdateRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/DeveloperAPIGroupMembershipUpdateRequest"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/DeveloperAPIGroupMembershipUpdateRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkgroupMembership"
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "groups_members_destroy",
        "description": "Delete a membership in an administered group.",
        "parameters": [
          {
            "in": "path",
            "name": "group_id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "A UUID string identifying this Printer Group",
            "required": true
          }
        ],
        "tags": [
          "Printer Groups"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user": {
                    "type": "string",
                    "example": "john.doe@example.com",
                    "description": "Email address of the member to remove"
                  }
                },
                "required": [
                  "user"
                ]
              }
            }
          }
        }
      }
    },
    "/developer/v1/groups/{group_id}/queue/": {
      "get": {
        "operationId": "groups_queue_list",
        "description": "\nReturns a list of all items in the queue of a Printer Group.\nIf the Group Queue feature is disabled for the group,\nthe queue is considered empty and an empty list is returned.\n        ",
        "parameters": [
          {
            "in": "path",
            "name": "group_id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "A UUID string identifying this Printer Group",
            "required": true
          }
        ],
        "tags": [
          "Printer Groups"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeveloperAPIMyCloudQueueItems"
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/developer/v1/o/token/": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "operationId": "Request an access token",
        "description": "\nTo log in to the Dashboard Developer API, you need to request an access token.\nThis token is used to authenticate your requests to the API.\nYou can request an access token by providing your client ID and client secret.\n            ",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "grant_type": {
                    "type": "string",
                    "description": "The type of grant being used. Currently only `client_credentials` is supported",
                    "example": "client_credentials"
                  },
                  "client_id": {
                    "type": "string",
                    "description": "Your Client ID."
                  },
                  "client_secret": {
                    "type": "string",
                    "description": "Your Client Secret."
                  }
                },
                "required": [
                  "grant_type",
                  "client_id",
                  "client_secret"
                ]
              },
              "examples": {
                "Requesting a token": {
                  "summary": "Requesting an access token",
                  "value": {
                    "grant_type": "client_secret",
                    "client_id": "your_client_id",
                    "client_secret": "your_client_secret"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "access_token": {
                      "type": "string"
                    },
                    "token_type": {
                      "type": "string"
                    },
                    "expires_in": {
                      "type": "integer"
                    },
                    "scope": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Access Token response": {
                    "summary": "Access Token response",
                    "value": {
                      "access_token": "your_access_token",
                      "token_type": "Bearer",
                      "expires_in": 86400,
                      "scope": "developer-api"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "error_description": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "response_example": {
                    "summary": "Example response",
                    "value": {
                      "error": "invalid_grant",
                      "error_description": "Invalid credentials given."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "response_example": {
                    "summary": "Example response",
                    "value": {
                      "error": "invalid_client"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/developer/v1/o/revoke_token/": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "operationId": "Revoke an access token",
        "description": "\nYou can log out from your current authenticated session by revoking the access token.\nWhen successfully revoked, the API does not return any response.\nAs aforementioned, once you send a request to revoke the specified access token,\nthis token can no longer be used to make requests to the Dashboard Developer API.\nPlease retrieve a new access token to start using the API again.\n            ",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string",
                    "description": "Your access token."
                  },
                  "client_id": {
                    "type": "string",
                    "description": "Your client ID."
                  },
                  "client_secret": {
                    "type": "string",
                    "description": "Your client secret."
                  }
                },
                "required": [
                  "token",
                  "client_id",
                  "client_secret"
                ]
              },
              "examples": {
                "Revoking a token": {
                  "summary": "Revoking an access token",
                  "value": {
                    "token": "your_access_token",
                    "client_id": "your_client_id",
                    "client_secret": "your_client_secret"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "response_example": {
                    "summary": "Example response",
                    "value": {
                      "error": "invalid_client"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BasicUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "username": {
            "type": "string",
            "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
            "pattern": "^[\\w.@+-]+$",
            "maxLength": 150
          },
          "first_name": {
            "type": "string",
            "maxLength": 150
          },
          "last_name": {
            "type": "string",
            "maxLength": 150
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email address",
            "maxLength": 254
          }
        },
        "required": [
          "id",
          "username"
        ]
      },
      "BuildPlatformContentsEnum": {
        "enum": [
          "BUILD_PLATFORM_CONTENTS_NOT_SUPPORTED",
          "BUILD_PLATFORM_CONTENTS_MISSING",
          "BUILD_PLATFORM_CONTENTS_UNCONFIRMED",
          "BUILD_PLATFORM_CONTENTS_CONFIRMED_CLEAR",
          "BUILD_PLATFORM_CONTENTS_CONFIRMED_DIRTY",
          "BUILD_PLATFORM_CONTENTS_POST_PRINT"
        ],
        "type": "string",
        "description": "* `BUILD_PLATFORM_CONTENTS_NOT_SUPPORTED` - NotSupported\n* `BUILD_PLATFORM_CONTENTS_MISSING` - Missing\n* `BUILD_PLATFORM_CONTENTS_UNCONFIRMED` - Unconfirmed\n* `BUILD_PLATFORM_CONTENTS_CONFIRMED_CLEAR` - ConfirmedClear\n* `BUILD_PLATFORM_CONTENTS_CONFIRMED_DIRTY` - ConfirmedDirty\n* `BUILD_PLATFORM_CONTENTS_POST_PRINT` - PostPrint"
      },
      "CameraStatusEnum": {
        "enum": [
          "UNKNOWN",
          "DISCONNECTED",
          "ENABLED",
          "DISABLED"
        ],
        "type": "string",
        "description": "* `UNKNOWN` - Unknown\n* `DISCONNECTED` - Disconnected\n* `ENABLED` - Enabled\n* `DISABLED` - Disabled"
      },
      "Cartridge": {
        "type": "object",
        "properties": {
          "serial": {
            "type": "string",
            "maxLength": 255
          },
          "consumable_type": {
            "type": "string"
          },
          "machine_type_id": {
            "type": "string"
          },
          "material": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "initial_volume_ml": {
            "type": "number",
            "format": "double"
          },
          "volume_dispensed_ml": {
            "type": "number",
            "format": "double"
          },
          "dispense_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "nullable": true
          },
          "write_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648
          },
          "mechanical_version": {
            "type": "string",
            "maxLength": 100
          },
          "manufacture_date": {
            "type": "string",
            "format": "date-time"
          },
          "manufacturer": {
            "type": "string",
            "maxLength": 100
          },
          "display_name": {
            "type": "string"
          },
          "lot_number": {
            "type": "string",
            "maxLength": 100
          },
          "last_modified": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "is_empty": {
            "type": "boolean",
            "readOnly": true
          },
          "inside_printer": {
            "type": "string",
            "readOnly": true
          },
          "connected_group": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          },
          "last_print_date": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          }
        },
        "required": [
          "created_at",
          "inside_printer",
          "is_empty",
          "last_modified",
          "last_print_date",
          "serial"
        ]
      },
      "CartridgeReadOnly": {
        "type": "object",
        "properties": {
          "serial": {
            "type": "string",
            "readOnly": true
          },
          "material": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "consumable_type": {
            "type": "string",
            "readOnly": true
          },
          "initial_volume_ml": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "volume_dispensed_ml": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "display_name": {
            "type": "string"
          },
          "is_empty": {
            "type": "boolean",
            "readOnly": true
          },
          "inside_printer": {
            "type": "string",
            "readOnly": true
          },
          "connected_group": {
            "type": "string",
            "format": "uuid",
            "readOnly": true,
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          },
          "last_print_date": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          },
          "machine_type_id": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "connected_group",
          "consumable_type",
          "created_at",
          "initial_volume_ml",
          "inside_printer",
          "is_empty",
          "last_print_date",
          "machine_type_id",
          "material",
          "serial",
          "volume_dispensed_ml"
        ]
      },
      "CartridgeSlotEnum": {
        "enum": [
          "FRONT",
          "BACK"
        ],
        "type": "string",
        "description": "* `FRONT` - FRONT\n* `BACK` - BACK"
      },
      "DeveloperAPIGroupMembershipCreateRequest": {
        "type": "object",
        "properties": {
          "user": {
            "type": "string",
            "minLength": 1,
            "description": "Email address of the member to invite"
          },
          "is_admin": {
            "type": "boolean",
            "description": "Change if the member is an administrator"
          }
        },
        "required": [
          "user"
        ]
      },
      "DeveloperAPIGroupMembershipUpdateRequest": {
        "type": "object",
        "properties": {
          "user": {
            "type": "string",
            "minLength": 1,
            "description": "Email address of the member to update"
          },
          "is_admin": {
            "type": "boolean",
            "description": "Change if the member is an administrator"
          }
        },
        "required": [
          "user"
        ]
      },
      "DeveloperAPIGroupsBulkAddPrintersRequest": {
        "type": "object",
        "properties": {
          "target_group": {
            "type": "string",
            "format": "uuid"
          },
          "printers": {
            "type": "array",
            "items": {}
          }
        },
        "required": [
          "printers",
          "target_group"
        ]
      },
      "DeveloperAPIMyCloudQueueItems": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "volume_ml": {
            "type": "number",
            "format": "double"
          },
          "material_name": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "username": {
            "type": "string"
          },
          "allowed_machine_type_ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "created_at",
          "id",
          "material_name",
          "name",
          "username",
          "volume_ml"
        ]
      },
      "DeveloperAPIMyPrinter": {
        "type": "object",
        "properties": {
          "serial": {
            "type": "string",
            "readOnly": true
          },
          "alias": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "machine_type_id": {
            "type": "string",
            "readOnly": true
          },
          "printer_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MyDeepPrinterStatus"
              }
            ],
            "readOnly": true
          },
          "cartridge_status": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PrinterCartridgeStatus"
            },
            "nullable": true,
            "readOnly": true,
            "description": "The status of the printer's cartridges. If the printer has multiple cartridges, this will be a list of statuses."
          },
          "tank_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PrinterTankStatus"
              }
            ],
            "readOnly": true
          },
          "group": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PrinterGroup"
              }
            ],
            "readOnly": true
          },
          "previous_print_run": {
            "type": "object",
            "additionalProperties": {},
            "readOnly": true
          },
          "firmware_version": {
            "type": "string",
            "readOnly": true
          },
          "location": {
            "type": "string",
            "readOnly": true,
            "nullable": true,
            "description": "This is a user defined physical location of the printer"
          }
        },
        "required": [
          "alias",
          "cartridge_status",
          "firmware_version",
          "group",
          "location",
          "machine_type_id",
          "previous_print_run",
          "printer_status",
          "serial",
          "tank_status"
        ]
      },
      "FormCell": {
        "type": "object",
        "properties": {
          "serial": {
            "type": "string",
            "maxLength": 255
          },
          "firmware_version": {
            "type": "string",
            "maxLength": 255
          },
          "status": {
            "type": "string",
            "maxLength": 255
          },
          "rotation": {
            "type": "string",
            "maxLength": 255
          }
        },
        "required": [
          "firmware_version",
          "rotation",
          "serial",
          "status"
        ]
      },
      "GroupInvitation": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "maxLength": 254
          },
          "is_admin": {
            "type": "boolean"
          }
        },
        "required": [
          "email"
        ]
      },
      "HarvestStatusEnum": {
        "enum": [
          "FORM_CELL_HARVEST_UNKNOWN",
          "FORM_CELL_HARVEST_STARTED",
          "FORM_CELL_HARVEST_FINISHED",
          "FORM_CELL_HARVEST_FAILED",
          "FORM_CELL_HARVEST_ABORTED"
        ],
        "type": "string",
        "description": "* `FORM_CELL_HARVEST_UNKNOWN` - Unknown\n* `FORM_CELL_HARVEST_STARTED` - Started\n* `FORM_CELL_HARVEST_FINISHED` - Finished\n* `FORM_CELL_HARVEST_FAILED` - Print Failed\n* `FORM_CELL_HARVEST_ABORTED` - Aborted"
      },
      "MyDeepPrinterStatus": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "readOnly": true
          },
          "last_pinged_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "hopper_level": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "nullable": true
          },
          "material_credit": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "hopper_material": {
            "type": "string",
            "maxLength": 255
          },
          "last_modified": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "current_temperature": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "current_print_run": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MyPrintRunReadOnly"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "form_cell": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FormCell"
              }
            ],
            "readOnly": true,
            "nullable": true
          },
          "last_printer_cooldown_started": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "outer_boundary_offset_corrections": {
            "nullable": true
          },
          "build_platform_contents": {
            "$ref": "#/components/schemas/BuildPlatformContentsEnum"
          },
          "tank_mixer_state": {
            "$ref": "#/components/schemas/TankMixerStateEnum"
          },
          "ready_to_print": {
            "$ref": "#/components/schemas/ReadyToPrintEnum"
          },
          "printer_capabilities": {
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100
            }
          },
          "printernet_capabilities": {
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100
            },
            "nullable": true
          },
          "camera_status": {
            "$ref": "#/components/schemas/CameraStatusEnum"
          }
        },
        "required": [
          "current_print_run",
          "form_cell",
          "last_modified",
          "status"
        ]
      },
      "MyPrintRunReadOnly": {
        "type": "object",
        "properties": {
          "guid": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "printer": {
            "type": "string",
            "readOnly": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusEnum"
              }
            ],
            "readOnly": true
          },
          "using_open_mode": {
            "type": "boolean",
            "readOnly": true,
            "nullable": true
          },
          "z_height_offset_mm": {
            "type": "number",
            "format": "double",
            "readOnly": true,
            "nullable": true
          },
          "print_started_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          },
          "print_finished_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          },
          "layer_count": {
            "type": "integer",
            "readOnly": true
          },
          "volume_ml": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "material": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "layer_thickness_mm": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "currently_printing_layer": {
            "type": "integer",
            "readOnly": true
          },
          "estimated_duration_ms": {
            "type": "integer",
            "readOnly": true
          },
          "elapsed_duration_ms": {
            "type": "integer",
            "readOnly": true
          },
          "estimated_time_remaining_ms": {
            "type": "integer",
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "print_run_success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PrintRunSuccess"
              }
            ],
            "readOnly": true
          },
          "firmware_version": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "cartridge": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "front_cartridge": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "back_cartridge": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "tank": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "cylinder": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "note": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PrintRunNote"
              }
            ],
            "readOnly": true
          },
          "print_thumbnail": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PrintThumbnailSerializerOnlyThumbnail"
              }
            ],
            "readOnly": true
          },
          "post_print_photo_url": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "user": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BasicUser"
              }
            ],
            "readOnly": true
          },
          "user_custom_label": {
            "type": "string",
            "readOnly": true
          },
          "group": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PrinterGroup"
              }
            ],
            "readOnly": true
          },
          "adaptive_thickness": {
            "type": "boolean",
            "readOnly": true
          },
          "message": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "print_job": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "material_name": {
            "type": "string",
            "readOnly": true
          },
          "print_settings_name": {
            "type": "string",
            "readOnly": true
          },
          "print_settings_code": {
            "type": "string",
            "readOnly": true
          },
          "form_auto_serial": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "form_auto_fw_version": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "harvest_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HarvestStatusEnum"
              }
            ],
            "readOnly": true,
            "nullable": true
          }
        },
        "required": [
          "adaptive_thickness",
          "back_cartridge",
          "cartridge",
          "created_at",
          "currently_printing_layer",
          "cylinder",
          "elapsed_duration_ms",
          "estimated_duration_ms",
          "estimated_time_remaining_ms",
          "firmware_version",
          "form_auto_fw_version",
          "form_auto_serial",
          "front_cartridge",
          "group",
          "guid",
          "harvest_status",
          "layer_count",
          "layer_thickness_mm",
          "material",
          "material_name",
          "message",
          "name",
          "note",
          "post_print_photo_url",
          "print_finished_at",
          "print_job",
          "print_run_success",
          "print_settings_code",
          "print_settings_name",
          "print_started_at",
          "print_thumbnail",
          "printer",
          "status",
          "tank",
          "user",
          "user_custom_label",
          "using_open_mode",
          "volume_ml",
          "z_height_offset_mm"
        ]
      },
      "NewWorkgroup": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 40
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "has_fleet_control": {
            "type": "boolean",
            "description": "Whether the Printer Group has Group Queue enabled"
          },
          "has_fleet_control_updated_by": {
            "type": "integer",
            "nullable": true,
            "description": "The admin who turned Group Queue on/off for the Printer Group"
          }
        },
        "required": [
          "created_at",
          "id",
          "name"
        ]
      },
      "PaginatedCartridgeList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=4"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=2"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Cartridge"
            }
          }
        }
      },
      "PaginatedDeveloperAPIMyPrinterList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/DeveloperAPIMyPrinter"
        }
      },
      "PaginatedPrintRunWithFleetControlDataList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=4"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=2"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PrintRunWithFleetControlData"
            }
          }
        }
      },
      "PaginatedTankList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=4"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=2"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tank"
            }
          }
        }
      },
      "PaginatedUserEventReadOnlyList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=4"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?page=2"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserEventReadOnly"
            }
          }
        }
      },
      "PaginatedWorkgroupList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Workgroup"
        }
      },
      "PartialWorkGroupRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "name"
        ]
      },
      "PatchedPartialWorkGroupRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "minLength": 1
          },
          "remote_print_enabled_override": {
            "type": "string",
            "nullable": true,
            "minLength": 1
          }
        }
      },
      "PrintPart": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "display_name": {
            "type": "string",
            "maxLength": 255
          },
          "end_layer": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "raw_mesh_hash": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "start_layer": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648
          },
          "volume_ml": {
            "type": "number",
            "format": "double"
          },
          "prepared_scene": {
            "type": "string"
          }
        },
        "required": [
          "guid",
          "id",
          "prepared_scene"
        ]
      },
      "PrintRunNote": {
        "type": "object",
        "properties": {
          "print_run": {
            "type": "string"
          },
          "note": {
            "type": "string"
          },
          "author": {
            "$ref": "#/components/schemas/BasicUser"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "required": [
          "note",
          "print_run",
          "updated_at"
        ]
      },
      "PrintRunSuccess": {
        "type": "object",
        "properties": {
          "print_run": {
            "type": "string"
          },
          "print_run_success": {
            "$ref": "#/components/schemas/PrintRunSuccessEnum"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          }
        },
        "required": [
          "created_at",
          "print_run"
        ]
      },
      "PrintRunSuccessEnum": {
        "enum": [
          "UNKNOWN",
          "SUCCESS",
          "FAILURE"
        ],
        "type": "string",
        "description": "* `UNKNOWN` - Unknown\n* `SUCCESS` - Success\n* `FAILURE` - Failure"
      },
      "PrintRunWithFleetControlData": {
        "type": "object",
        "properties": {
          "guid": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "printer": {
            "type": "string",
            "readOnly": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusEnum"
              }
            ],
            "readOnly": true
          },
          "using_open_mode": {
            "type": "boolean",
            "readOnly": true,
            "nullable": true
          },
          "z_height_offset_mm": {
            "type": "number",
            "format": "double",
            "readOnly": true,
            "nullable": true
          },
          "print_started_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          },
          "print_finished_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          },
          "layer_count": {
            "type": "integer",
            "readOnly": true
          },
          "volume_ml": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "material": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "layer_thickness_mm": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "currently_printing_layer": {
            "type": "integer",
            "readOnly": true
          },
          "estimated_duration_ms": {
            "type": "integer",
            "readOnly": true
          },
          "elapsed_duration_ms": {
            "type": "integer",
            "readOnly": true
          },
          "estimated_time_remaining_ms": {
            "type": "integer",
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "print_run_success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PrintRunSuccess"
              }
            ],
            "readOnly": true
          },
          "firmware_version": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "cartridge": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "front_cartridge": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "back_cartridge": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "tank": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "cylinder": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "note": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PrintRunNote"
              }
            ],
            "readOnly": true
          },
          "print_thumbnail": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PrintThumbnailSerializerOnlyThumbnail"
              }
            ],
            "readOnly": true
          },
          "post_print_photo_url": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "user": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BasicUser"
              }
            ],
            "readOnly": true
          },
          "user_custom_label": {
            "type": "string",
            "readOnly": true
          },
          "group": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PrinterGroup"
              }
            ],
            "readOnly": true
          },
          "adaptive_thickness": {
            "type": "boolean",
            "readOnly": true
          },
          "message": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "print_job": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "material_name": {
            "type": "string",
            "readOnly": true
          },
          "print_settings_name": {
            "type": "string",
            "readOnly": true
          },
          "print_settings_code": {
            "type": "string",
            "readOnly": true
          },
          "cloud_queue_item": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true,
            "readOnly": true
          },
          "form_auto_serial": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "form_auto_fw_version": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "harvest_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HarvestStatusEnum"
              }
            ],
            "readOnly": true,
            "nullable": true
          },
          "parts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PrintPart"
            },
            "readOnly": true
          },
          "print_intent": {
            "type": "string",
            "format": "uuid",
            "readOnly": true,
            "nullable": true
          }
        },
        "required": [
          "adaptive_thickness",
          "back_cartridge",
          "cartridge",
          "cloud_queue_item",
          "created_at",
          "currently_printing_layer",
          "cylinder",
          "elapsed_duration_ms",
          "estimated_duration_ms",
          "estimated_time_remaining_ms",
          "firmware_version",
          "form_auto_fw_version",
          "form_auto_serial",
          "front_cartridge",
          "group",
          "guid",
          "harvest_status",
          "layer_count",
          "layer_thickness_mm",
          "material",
          "material_name",
          "message",
          "name",
          "note",
          "parts",
          "post_print_photo_url",
          "print_finished_at",
          "print_intent",
          "print_job",
          "print_run_success",
          "print_settings_code",
          "print_settings_name",
          "print_started_at",
          "print_thumbnail",
          "printer",
          "status",
          "tank",
          "user",
          "user_custom_label",
          "using_open_mode",
          "volume_ml",
          "z_height_offset_mm"
        ]
      },
      "PrintThumbnailSerializerOnlyThumbnail": {
        "type": "object",
        "properties": {
          "thumbnail": {
            "type": "string",
            "format": "uri"
          }
        },
        "required": [
          "thumbnail"
        ]
      },
      "PrinterCartridgeStatus": {
        "type": "object",
        "properties": {
          "cartridge": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CartridgeReadOnly"
              }
            ],
            "readOnly": true
          },
          "last_modified": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "cartridge_slot": {
            "$ref": "#/components/schemas/CartridgeSlotEnum"
          }
        },
        "required": [
          "cartridge",
          "last_modified"
        ]
      },
      "PrinterGroup": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 40
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "PrinterTankStatus": {
        "type": "object",
        "properties": {
          "tank": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TankReadOnly"
              }
            ],
            "readOnly": true,
            "nullable": true
          },
          "last_modified": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "required": [
          "last_modified",
          "tank"
        ]
      },
      "ReadyToPrintEnum": {
        "enum": [
          "READY_TO_PRINT_NOT_SUPPORTED",
          "READY_TO_PRINT_READY",
          "READY_TO_PRINT_NEEDS_CONFIRMATION",
          "READY_TO_PRINT_NOT_READY"
        ],
        "type": "string",
        "description": "* `READY_TO_PRINT_NOT_SUPPORTED` - NotSupported\n* `READY_TO_PRINT_READY` - Ready\n* `READY_TO_PRINT_NEEDS_CONFIRMATION` - NeedsConfirmation\n* `READY_TO_PRINT_NOT_READY` - NotReady"
      },
      "StatusEnum": {
        "enum": [
          "QUEUED",
          "PREPRINT",
          "PRINTING",
          "PAUSED",
          "PAUSING",
          "FINISHED",
          "ABORTING",
          "ABORTED",
          "ERROR",
          "WAITING_FOR_RESOLUTION",
          "PREHEAT",
          "PRECOAT",
          "POSTCOAT"
        ],
        "type": "string",
        "description": "* `QUEUED` - Queued\n* `PREPRINT` - Preprint\n* `PRINTING` - Printing\n* `PAUSED` - Paused\n* `PAUSING` - Pausing\n* `FINISHED` - Finished\n* `ABORTING` - Aborting\n* `ABORTED` - Aborted\n* `ERROR` - Error\n* `WAITING_FOR_RESOLUTION` - Waiting for Resolution\n* `PREHEAT` - Preheat\n* `PRECOAT` - Precoat\n* `POSTCOAT` - Postcoat"
      },
      "Tank": {
        "type": "object",
        "properties": {
          "serial": {
            "type": "string",
            "maxLength": 255
          },
          "material": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "layers_printed": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "nullable": true
          },
          "print_time_ms": {
            "type": "integer",
            "maximum": 9223372036854776000,
            "minimum": -9223372036854776000,
            "format": "int64",
            "nullable": true
          },
          "heatmap": {
            "type": "string"
          },
          "heatmap_gif": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "mechanical_version": {
            "type": "string",
            "nullable": true,
            "maxLength": 100
          },
          "manufacture_date": {
            "type": "string",
            "format": "date-time"
          },
          "manufacturer": {
            "type": "string",
            "maxLength": 100
          },
          "display_name": {
            "type": "string"
          },
          "lot_number": {
            "type": "string",
            "maxLength": 100
          },
          "layer_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648
          },
          "last_modified": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "inside_printer": {
            "type": "string",
            "readOnly": true
          },
          "write_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648
          },
          "tank_type": {
            "type": "string",
            "nullable": true,
            "maxLength": 100
          },
          "connected_group": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "first_fill_date": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          },
          "last_print_date": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          }
        },
        "required": [
          "created_at",
          "heatmap_gif",
          "inside_printer",
          "last_modified",
          "last_print_date",
          "serial"
        ]
      },
      "TankMixerStateEnum": {
        "enum": [
          "TANK_MIXER_STATE_NOT_SUPPORTED",
          "TANK_MIXER_STATE_PRESENT",
          "TANK_MIXER_STATE_UNCONFIRMED",
          "TANK_MIXER_STATE_MISSING"
        ],
        "type": "string",
        "description": "* `TANK_MIXER_STATE_NOT_SUPPORTED` - Notsupported\n* `TANK_MIXER_STATE_PRESENT` - Present\n* `TANK_MIXER_STATE_UNCONFIRMED` - Unconfirmed\n* `TANK_MIXER_STATE_MISSING` - Missing"
      },
      "TankReadOnly": {
        "type": "object",
        "properties": {
          "serial": {
            "type": "string",
            "readOnly": true
          },
          "material": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "print_time_ms": {
            "type": "integer",
            "readOnly": true,
            "nullable": true
          },
          "layers_printed": {
            "type": "integer",
            "readOnly": true,
            "nullable": true
          },
          "first_fill_date": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          },
          "heatmap": {
            "type": "string"
          },
          "heatmap_gif": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "display_name": {
            "type": "string"
          },
          "layer_count": {
            "type": "integer",
            "readOnly": true
          },
          "inside_printer": {
            "type": "string",
            "readOnly": true
          },
          "tank_type": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "connected_group": {
            "type": "string",
            "format": "uuid",
            "readOnly": true,
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          },
          "last_print_date": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          }
        },
        "required": [
          "connected_group",
          "created_at",
          "first_fill_date",
          "heatmap_gif",
          "inside_printer",
          "last_print_date",
          "layer_count",
          "layers_printed",
          "material",
          "print_time_ms",
          "serial",
          "tank_type"
        ]
      },
      "UserEventReadOnly": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "printer": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "print_run": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MyPrintRunReadOnly"
              }
            ],
            "readOnly": true
          },
          "tank": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "cartridge": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "type": {
            "type": "string",
            "readOnly": true
          },
          "type_label": {
            "type": "string",
            "readOnly": true
          },
          "action": {
            "type": "string",
            "readOnly": true
          },
          "message": {
            "type": "string",
            "readOnly": true
          },
          "was_read": {
            "type": "boolean",
            "readOnly": true
          },
          "group": {
            "$ref": "#/components/schemas/PrinterGroup"
          }
        },
        "required": [
          "action",
          "cartridge",
          "created_at",
          "group",
          "id",
          "message",
          "print_run",
          "printer",
          "tank",
          "type",
          "type_label",
          "was_read"
        ]
      },
      "Workgroup": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 40
          },
          "remote_print_enabled_override": {
            "type": "boolean"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "memberships": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkgroupMembership"
            },
            "readOnly": true
          },
          "printers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "readOnly": true
          },
          "invitations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupInvitation"
            },
            "readOnly": true
          },
          "has_fleet_control": {
            "type": "boolean",
            "description": "Whether the Printer Group has Group Queue enabled"
          },
          "has_fleet_control_updated_by": {
            "type": "integer",
            "nullable": true,
            "description": "The admin who turned Group Queue on/off for the Printer Group"
          },
          "settings": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WorkgroupSettings"
              }
            ],
            "readOnly": true
          }
        },
        "required": [
          "created_at",
          "id",
          "invitations",
          "memberships",
          "name",
          "printers",
          "settings"
        ]
      },
      "WorkgroupMembership": {
        "type": "object",
        "properties": {
          "is_admin": {
            "type": "boolean"
          },
          "user": {
            "type": "string",
            "readOnly": true
          },
          "email": {
            "type": "string",
            "readOnly": true
          },
          "first_name": {
            "type": "string",
            "readOnly": true
          },
          "last_name": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "email",
          "first_name",
          "last_name",
          "user"
        ]
      },
      "WorkgroupSettings": {
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "update_mode": {
            "type": "string"
          }
        },
        "required": [
          "group"
        ]
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "name": "Authorization",
        "scheme": "bearer",
        "in": "header"
      }
    }
  },
  "servers": [
    {
      "url": "https://api.formlabs.com",
      "description": "Formlabs Web API Server"
    }
  ],
  "tags": [
    {
      "name": "Authentication",
      "description": "\n## Prerequisites\nMake sure that you have the following prior to proceeding on with this section:\n- You have Formlabs Printer(s) connected to your Formlabs.com account\n- You have your **Client ID** and **Client Secret** Application credentials\n  <br/>*To get your **Client ID** and **Client Secret**, visit the [Developer Tools page](https://dashboard.formlabs.com/#developer) and create your Application credentials.*\n\n## Getting an Access Token\n\nTo authenticate with the Dashboard Developer API, you need to get an access token. The access token is used to authenticate your requests to the API.\nSee the [Request an access token](#tag/Authentication/operation/Request%20an%20access%20token) endpoint for more information.\n\nExample:\n\n```bash\ncurl --request POST \\\n--url https://api.formlabs.com/developer/v1/o/token/ \\\n--header 'content-type: application/x-www-form-urlencoded' \\\n--data 'grant_type=client_credentials&client_id=<client_id>&client_secret=<client_secret>'\n```\n## Using the Access Token\n\nOnce you have the access token, you can use it to authenticate your requests to the Dashboard Developer API.\nTo authenticate your requests, you need to include the access token in the Authorization header of your request.\nThe access token should be prefixed with the word “bearer” followed by a space.\n\nExample:\n\n```bash\ncurl --request GET \\\n--url https://api.formlabs.com/developer/v1/printers/ \\\n--header 'content-type: application/x-www-form-urlencoded' \\\n--header 'Authorization: bearer <access_token>'\n```\n\n## Revoking an Access Token\n\nIf you need to revoke an access token, you can do so by using the [Revoke an access token](#tag/Authentication/operation/Revoke%20an%20access%20token) endpoint.\n         "
    },
    {
      "name": "Printers",
      "description": "This section contains endpoints for managing Printers."
    },
    {
      "name": "Prints",
      "description": "This section contains endpoints for listing and searching Prints."
    },
    {
      "name": "Tanks",
      "description": "This section contains endpoints for listing Tanks."
    },
    {
      "name": "Cartridges",
      "description": "This section contains endpoints for listing Cartridges."
    },
    {
      "name": "Events",
      "description": "This section contains endpoints for listing Events."
    },
    {
      "name": "Printer Groups",
      "description": "This section contains endpoints for managing Printer Groups."
    }
  ]
}